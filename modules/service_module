#       ðŸ”¹ What is the service module?
# The service module is used to manage services on remote hosts.
# You can start, stop, restart, enable, disable, or reload a service.
# Works with SysVinit, Upstart, and systemd services.
# Facts about the service can also be gathered (use service_facts for detailed info).
# ðŸ”¹ Common Options

| Option          | Description                                   |
| --------------- | --------------------------------------------- |
| `name`          | Name of the service to manage                 |
| `state`         | `started`, `stopped`, `restarted`, `reloaded` |
| `enabled`       | `yes`/`no` â†’ ensures service starts on boot   |
| `masked`        | `yes`/`no` â†’ mask/unmask systemd service      |
| `daemon_reload` | `yes` â†’ reload systemd manager configuration  |

# ðŸ”¹ Example 1 â€“ Start a Service
- name: Start nginx service
  hosts: all
  become: yes
  tasks:
    - name: Ensure nginx is running
      ansible.builtin.service:
        name: nginx
        state: started

# ðŸ”¹ Example 2 â€“ Stop & Disable a Service
- name: Stop and disable apache
  hosts: all
  become: yes
  tasks:
    - name: Stop apache2
      ansible.builtin.service:
        name: apache2
        state: stopped
        enabled: no

# ðŸ”¹ Example 3 â€“ Restart a Service
- name: Restart docker service
  hosts: all
  become: yes
  tasks:
    - name: Restart docker
      ansible.builtin.service:
        name: docker
        state: restarted

# ðŸ”¹ Example 4 â€“ Start Service Only If Not Running
- name: Conditionally start a service
  hosts: all
  become: yes
  tasks:
    - name: Start sshd if not running
      ansible.builtin.service:
        name: sshd
        state: started
      when: ansible_facts.services['sshd.service'].state != 'running'


# âœ… Here we used service_facts to check the state before acting.

# ðŸ”¹ Example 5 â€“ Combined With set_fact for Reporting
- name: Manage and track service
  hosts: all
  become: yes
  tasks:
    - name: Start nginx
      ansible.builtin.service:
        name: nginx
        state: started
      register: nginx_result

    - name: Save status to fact
      ansible.builtin.set_fact:
        nginx_status: "{{ 'started' if nginx_result.changed else 'already running' }}"

    - name: Show nginx status
      debug:
        msg: "Nginx service is {{ nginx_status }}"


# âœ… This allows reporting or passing info to later tasks or dashboards.

# ðŸ”¹ Key Notes
# Use service for basic service management.
# For detailed info about multiple services, combine with service_facts.
# Works on any Linux OS (and some modules support Windows services via win_service).
