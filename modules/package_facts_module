ðŸ”¹ What is the package_facts module?

The package_facts module gathers a list of installed packages on the target system.

It saves the result into the special variable ansible_facts.packages.

Works across different package managers (apt, yum, dnf, etc.).

Useful for:
âœ… Checking if a package is installed.
âœ… Auditing package versions.
âœ… Conditional tasks based on installed software.

ðŸ”¹ Syntax
- name: Gather installed packages
  ansible.builtin.package_facts:
    manager: auto


manager: auto â†’ Automatically detects package manager (apt, yum, dnf).

ðŸ”¹ Example 1 â€“ Gather Package Facts
- name: Collect installed packages
  hosts: all
  tasks:
    - name: Gather package facts
      ansible.builtin.package_facts:
        manager: auto

    - name: Show installed packages
      ansible.builtin.debug:
        var: ansible_facts.packages


âœ… This will output a dictionary of all installed packages with version(s).

ðŸ”¹ Example 2 â€“ Check if a Package is Installed
- name: Check if httpd is installed
  hosts: all
  tasks:
    - name: Gather package facts
      ansible.builtin.package_facts:
        manager: auto

    - name: Fail if httpd is not installed
      ansible.builtin.fail:
        msg: "httpd is not installed!"
      when: "'httpd' not in ansible_facts.packages"


âœ… Playbook fails if httpd is missing.

ðŸ”¹ Example 3 â€“ Get Version of a Package
- name: Show version of nginx if installed
  hosts: all
  tasks:
    - name: Gather package facts
      ansible.builtin.package_facts:
        manager: auto

    - name: Print nginx version
      ansible.builtin.debug:
        msg: "Nginx version: {{ ansible_facts.packages['nginx'][0].version }}"
      when: "'nginx' in ansible_facts.packages"


âœ… Displays nginx version if installed.

ðŸ”¹ Example 4 â€“ Conditional Installation
- name: Install tree if not already installed
  hosts: all
  become: yes
  tasks:
    - name: Gather package facts
      ansible.builtin.package_facts:
        manager: auto

    - name: Install tree package
      ansible.builtin.package:
        name: tree
        state: present
      when: "'tree' not in ansible_facts.packages"


âœ… Installs tree only if itâ€™s missing.

ðŸ”¹ Real-World Use Cases

Compliance auditing â€“ ensure required packages are installed.

Version checks â€“ confirm a specific package version before upgrades.

Reporting â€“ gather and store installed package lists.

Conditional deployments â€“ install or skip tasks depending on existing packages.

ðŸ‘‰ Pro Tip: For system-wide facts like OS, CPU, and memory, use the setup module. For installed packages, use package_facts.
